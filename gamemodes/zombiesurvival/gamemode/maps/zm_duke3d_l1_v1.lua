hook.Add("InitPostEntityMap", "Adding", function()
	for _, ent in pairs(ents.FindByClass("info_player*")) do
		ent:Remove()
	end

	for _, ent in pairs(ents.FindByClass("trigger_teleport")) do
		ent:Remove()
	end

	for k, ent in pairs(ents.FindByClass("func_button")) do
		if k >= 4 then
			ent:Remove()
		end
	end

	ents.FindByClass("func_door")[4]:SetKeyValue("dmg", "0")

	for _, v in pairs({Vector(470.65124511719,1737.1954345703,-71.96875),Vector(546.00689697266,1748.7508544922,-71.96875),Vector(648.45947265625,1764.4614257813,-71.96875),Vector(676.79302978516,1583.3684082031,-71.96875),Vector(525.46228027344,1543.9055175781,-71.96875),Vector(379.4338684082,1388.5146484375,-71.96875),Vector(868.90179443359,1011.8284912109,-71.96875),Vector(863.27850341797,860.03363037109,-71.96875),Vector(207.35824584961,1829.9584960938,-71.96875),Vector(200.1577911377,1620.0853271484,-71.96875),Vector(197.14472961426,1200.7767333984,-71.96875),Vector(203.08474731445,1062.1617431641,-71.96875),Vector(112.69140625,2359.1608886719,-71.96875),Vector(305.31762695313,2373.6938476563,-71.96875),Vector(463.92102050781,2371.0603027344,-71.96875),Vector(370.2646484375,1953.0328369141,-71.96875)}) do
		local ent = ents.Create("info_player_human")
		if ent:IsValid() then
			ent:SetPos(v)
			ent:Spawn()
		end
	end

	for _, v in pairs({Vector(1934.0421142578,420.65573120117,-79.96875),Vector(2173.7768554688,410.17532348633,-79.96875),Vector(2378.3793945313,377.80352783203,-79.96875),Vector(2450.9541015625,554.15246582031,-79.96875),Vector(1399.9232177734,416.21072387695,-79.96875),Vector(1190.5834960938,491.0087890625,-79.96875),Vector(1033.4420166016,309.74029541016,-79.96875),Vector(1214.0626220703,331.53985595703,-79.96875),Vector(1616.3471679688,535.11712646484,146.39828491211),Vector(1481.4776611328,517.92651367188,143.41523742676),Vector(1476.0441894531,302.91809082031,84.03125),Vector(1642.4637451172,289.68890380859,84.03125)}) do
		local ent = ents.Create("info_player_zombie")
		if ent:IsValid() then
			ent:SetPos(v)
			ent:Spawn()
		end
	end
end)
